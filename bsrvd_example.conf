[logging]
# logging target
#  file:     rotating file log
#  journald: log to journald
#  stdout:   log to stdout
target: journald

# if logging target is "file", this specifies the log file name
#path: /var/log/bsrvd.log

# if logging target is "file", this specifies the number of days old logs should be kept
#max_logfiles: 7

# set log level, options are CRITICAL, ERROR, WARNING, INFO, DEBUG
log_level: debug

[borg]
# Specify borg binary if not in PATH
#binary: /usr/bin/borg

# Set BORG_BASE_DIR, where borg places the its cache and security info (e.g. nonces)
#base_dir: /var/cache/bsrvd

# Base directory where to mount borg backup repositories using borg mount
#mount_dir: /tmp/bsrvd-mount


## Hook Timeout
# Timeout for hook commands in seconds, before they will be killed
#hook_timeout: 20

## Hook Commands
# The following keys allow the definition of commands to be run when certain events occur
# The commands specified here are used for all jobs. If you wish to specify them individually, you
# can use the same keys in a :job section to overwrite these global defaults

# Hook command to run when a borg list command failed
#hook_list_failed:
# Hook command to run when a borg list command succeeded
#hook_list_successful:

# Hook command to run when a hook mount command failed
#hook_mount_failed:
# Hook command to run when a hook mount command succeeded
#hook_mount_successful:

# Hook command to run when a hook umount command failed
#hook_umount_failed:
# Hook command to run when a hook umount command succeeded
#hook_umount_successful:

# Hook command to run when a borg create command failed
#hook_run_failed:
# Hook command to run when a borg create command succeeded
#hook_run_successful:
# Hook command to run when the maximum number of retries was reached and bsrv gave up
#hook_give_up:

[stat]
# Configuration options for bsrvstatd

# Schedule for bsrvstatd
#schedule:

# Hook command to run when all repositories associated with jobs with stat_maxage conditions could be reached and
# they meet their individual conditions
hook_satisfied:

# Hook command to run when any repositories associated with jobs with stat_maxage conditions could not be reached or
# they do not meet their individual conditions
hook_failed:

## Jobs
# Jobs are defined using a section starting with the colon (:) symbol.
# This :test job is only a template
[:test]

# User to run borg as. This can obviously only be used, if the service runs as root
#borg_run_as: root

# Set borg repository path (may include ssh://)
borg_repo:

# Passphrase for given repository
borg_passphrase:

# SSH command to use, if repo is remotely accessed via ssh
#borg_rsh: ssh

# Arguments to supply when calling borg create
borg_create_args:

# Arguments to supply when calling borg prune
borg_prune_args:

# Schedule for this job.
schedule:

# Maximum age of last successful backup to be checked by bsrvstatd
#stat_maxage:

# Delay for retrying failed job in seconds
#retry_delay: 60

# Maximum number of retries, 0 deactivates retrying
#retry_max: 3