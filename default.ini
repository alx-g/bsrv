[logging]
# logging target, select one or more, separate with comma
#  file:     rotating file log
#  journald: log to journald
#  stdout:   log to stdout
target: stdout, file

# if logging target is "file", this specifies the log file name
path: /var/log/bsrvd.log

# if logging target is "file", this specifies the number of days old logs should be kept
max_logfiles: 7

# set log level, options are CRITICAL, ERROR, WARNING, INFO, DEBUG
log_level: debug

[borg]
# Specify borg binary if not in PATH
#binary: /usr/bin/borg

# Set BORG_BASE_DIR, where borg places the its cache and security info (e.g. nonces)
base_dir: /var/cache/bsrvd

# Base directory where to mount borg backup repositories using borg mount
mount_dir: /tmp/bsrvd-mount


## Hook Timeout
# Timeout for hook commands in seconds, before they will be killed
#hook_timeout: 20

## Hook Commands
# The following keys allow the definition of commands to be run when certain events occur
# The commands specified here are used for all jobs. If you wish to specify them individually, you
# can use the same keys in a :job section to overwrite these global defaults

# Hook command to run when a borg list command failed
#hook_list_failed:
# Hook command to run when a borg list command succeeded
#hook_list_successful:

# Hook command to run when a hook mount command failed
hook_mount_failed: notify-send -i error "bsrv mount" "borg mount failed"
# Hook command to run when a hook mount command succeeded
hook_mount_successful: notify-send -i info "bsrv mount" "borg mount successful"

# Hook command to run when a hook umount command failed
hook_umount_failed: notify-send -i error "bsrv umount" "borg umount failed"
# Hook command to run when a hook umount command succeeded
hook_umount_successful: notify-send -i info "bsrv umount" "borg umount successful"

# Hook command to run when a borg create command failed
#hook_run_failed:
# Hook command to run when a borg create command succeeded
#hook_run_successful:
# Hook command to run when the maximum number of retries was reached and bsrv gave up
#hook_give_up:

[stat]
# Configuration options for bsrvstatd

# When to run bsrvstatd
# For schedule syntax, see README.md. TREF is the previously scheduled stat event
# E.g. columns: minute, hour, day(month), month, day(week)
schedule: 40 0 * * *

## Hook Timeout
# Timeout for stat hook commands in seconds, before they will be killed
#hook_timeout: 60

hook_satisfied:

hook_failed:

## Jobs
# Jobs are defined using a section starting with the colon (:) symbol.
[:test]

# Set borg repository path (may include ssh://)
borg_repo: /home/alex/test/borg_target

# Passphrase for given repository
borg_passphrase: 123456

# Arguments to supply when calling borg create
# This normally consists of a list of directories and some exclusions, e.g. with --exclude or --exclude-caches, see
# borg manual for more info.
borg_create_args: /home/alex/test/auto1 --exclude-caches

# Arguments to supply when calling borg prune
# This defines, how many backups to keep, also see borg manual for more info.
borg_prune_args: --keep-minutely 10

# Schedule definition for this Job.
# For schedule syntax, see README.md. TREF is the previously scheduled event for this job.
# E.g. columns: minute, hour, day(month), month, day(week)
schedule: 0 8 * * *

# When stat checks this repository, is is satisfied if the last successful backup is not older than the given time
# period. For detailed syntax, see "@every" in relative schedule syntax in README.md.
# If this value is not set, stat checking is disabled for this job.
# Example:
# stat_maxage: 1 week 1 day 1 hour 1 minute     ->  Maximum age is 1 week, 1 day, 1 hour, 1 minute
stat_maxage: 1 day

# Delay for retrying failed job in seconds
retry_delay: 10

# Maximum number of retries, 0 deactivates retrying
retry_max: 3